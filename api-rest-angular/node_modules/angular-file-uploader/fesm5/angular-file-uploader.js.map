{"version":3,"file":"angular-file-uploader.js","sources":["ng://angular-file-uploader/lib/angular-file-uploader.service.ts","ng://angular-file-uploader/lib/angular-file-uploader.component.ts","ng://angular-file-uploader/lib/angular-file-uploader.module.ts","ng://angular-file-uploader/public-api.ts","ng://angular-file-uploader/angular-file-uploader.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AngularFileUploaderService {\n\n  constructor() { }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  ReplaceTexts,\n  AngularFileUploaderConfig,\n  UploadInfo,\n  UploadApi,\n} from './angular-file-uploader.types';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpEventType,\n} from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'angular-file-uploader',\n  templateUrl: './angular-file-uploader.component.html',\n  styleUrls: ['./angular-file-uploader.component.css'],\n})\nexport class AngularFileUploaderComponent implements OnChanges {\n  // Inputs\n  @Input()\n  config: AngularFileUploaderConfig;\n\n  @Input()\n  resetUpload = false;\n\n  // Outputs\n  @Output()\n  ApiResponse = new EventEmitter();\n\n  @Output()\n  everythingDone: EventEmitter<UploadInfo[]> = new EventEmitter<UploadInfo[]>();\n\n  // Properties\n  theme: string;\n  id: number;\n  hideProgressBar: boolean;\n  maxSize: number;\n  uploadAPI: string;\n  method: string;\n  formatsAllowed: string;\n  multiple: boolean;\n  headers: HttpHeaders | { [header: string]: string | string[] };\n  params: HttpParams | { [param: string]: string | string[] };\n  responseType: string;\n  hideResetBtn: boolean;\n  hideSelectBtn: boolean;\n  allowedFiles: File[] = [];\n  notAllowedFiles: {\n    fileName: string;\n    fileSize: string;\n    errorMsg: string;\n  }[] = [];\n  Caption: string[] = [];\n  isAllowedFileSingle = true;\n  progressBarShow = false;\n  enableUploadBtn = false;\n  uploadMsg = false;\n  afterUpload = false;\n  uploadStarted = false;\n  uploadMsgText: string;\n  uploadMsgClass: string;\n  uploadPercent: number;\n  replaceTexts: ReplaceTexts;\n  currentUploads: any[] = [];\n  fileNameIndex = true;\n\n  private idDate: number = +new Date();\n\n  constructor(private http: HttpClient) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Track changes in Configuration and see if user has even provided Configuration.\n    if (changes.config && this.config) {\n      // Assign User Configurations to Library Properties.\n      this.theme = this.config.theme || '';\n      this.id =\n        this.config.id ||\n        parseInt((this.idDate / 10000).toString().split('.')[1], 10) +\n          Math.floor(Math.random() * 20) * 10000;\n      this.hideProgressBar = this.config.hideProgressBar || false;\n      this.hideResetBtn = this.config.hideResetBtn || false;\n      this.hideSelectBtn = this.config.hideSelectBtn || false;\n      this.maxSize = (this.config.maxSize || 20) * 1024000; // mb to bytes.\n      this.uploadAPI = this.config.uploadAPI.url;\n      this.method = this.config.uploadAPI.method || 'POST';\n      this.formatsAllowed =\n        this.config.formatsAllowed || '.jpg,.png,.pdf,.docx,.txt,.gif,.jpeg';\n      this.multiple = this.config.multiple || false;\n      this.headers = this.config.uploadAPI.headers || {};\n      this.params = this.config.uploadAPI.params || {};\n      this.responseType = this.config.uploadAPI.responseType || null;\n      this.fileNameIndex = this.config.fileNameIndex === false ? false : true;\n      this.replaceTexts = {\n        selectFileBtn: this.multiple ? 'Select Files' : 'Select File',\n        resetBtn: 'Reset',\n        uploadBtn: 'Upload',\n        dragNDropBox: 'Drag N Drop',\n        attachPinBtn: this.multiple ? 'Attach Files...' : 'Attach File...',\n        afterUploadMsg_success: 'Successfully Uploaded !',\n        afterUploadMsg_error: 'Upload Failed !',\n        sizeLimit: 'Size Limit',\n      }; // default replaceText.\n      if (this.config.replaceTexts) {\n        // updated replaceText if user has provided any.\n        this.replaceTexts = {\n          ...this.replaceTexts,\n          ...this.config.replaceTexts,\n        };\n      }\n    }\n\n    // Reset when resetUpload value changes from false to true.\n    if (changes.resetUpload) {\n      if (changes.resetUpload.currentValue === true) {\n        this.resetFileUpload();\n      }\n    }\n  }\n\n  // Reset following properties.\n  resetFileUpload() {\n    this.allowedFiles = [];\n    this.Caption = [];\n    this.notAllowedFiles = [];\n    this.uploadMsg = false;\n    this.enableUploadBtn = false;\n  }\n\n  // When user selects files.\n  onChange(event: any) {\n    this.notAllowedFiles = [];\n    const fileExtRegExp: RegExp = /(?:\\.([^.]+))?$/;\n    let fileList: FileList;\n\n    if (this.afterUpload || !this.multiple) {\n      this.allowedFiles = [];\n      this.Caption = [];\n      this.afterUpload = false;\n    }\n\n    if (event.type === 'drop') {\n      fileList = event.dataTransfer.files;\n    } else {\n      fileList = event.target.files || event.srcElement.files;\n    }\n\n    // 'forEach' does not exist on 'filelist' that's why this good old 'for' is used.\n    for (let i = 0; i < fileList.length; i++) {\n      const currentFileExt = fileExtRegExp\n        .exec(fileList[i].name)[1]\n        .toLowerCase(); // Get file extension.\n      const isFormatValid = this.formatsAllowed.includes(currentFileExt);\n\n      const isSizeValid = fileList[i].size <= this.maxSize;\n\n      // Check whether current file format and size is correct as specified in the configurations.\n      if (isFormatValid && isSizeValid) {\n        this.allowedFiles.push(fileList[i]);\n      } else {\n        this.notAllowedFiles.push({\n          fileName: fileList[i].name,\n          fileSize: this.convertSize(fileList[i].size),\n          errorMsg: !isFormatValid ? 'Invalid format' : 'Invalid size',\n        });\n      }\n    }\n\n    // If there's any allowedFiles.\n    if (this.allowedFiles.length > 0) {\n      this.enableUploadBtn = true;\n      // Upload the files directly if theme is attach pin (as upload btn is not there for this theme).\n      if (this.theme === 'attachPin') {\n        this.uploadFiles();\n      }\n    } else {\n      this.enableUploadBtn = false;\n    }\n\n    this.uploadMsg = false;\n    this.uploadStarted = false;\n    this.uploadPercent = 0;\n    event.target.value = null;\n  }\n\n  uploadFiles() {\n    this.progressBarShow = true;\n    this.uploadStarted = true;\n    this.notAllowedFiles = [];\n    let isError = false;\n    this.isAllowedFileSingle = this.allowedFiles.length <= 1;\n    const formData = new FormData();\n\n    // Add data to be sent in this request\n    this.allowedFiles.forEach((file, i) => {\n      formData.append(\n        this.Caption[i] || 'file' + (this.fileNameIndex ? i : ''),\n        this.allowedFiles[i]\n      );\n    });\n\n    // Contruct Headers\n    const headers = new HttpHeaders();\n    for (const key of Object.keys(this.headers)) {\n      headers.append(key, this.headers[key]);\n    }\n\n    // Contruct Params\n    const params = new HttpParams();\n    for (const key of Object.keys(this.params)) {\n      params.append(key, this.params[key]);\n    }\n\n    const options = {\n      headers,\n      params,\n    };\n\n    if (this.responseType) (options as any).responseType = this.responseType;\n\n    this.http\n      .request(this.method.toUpperCase(), this.uploadAPI, {\n        body: formData,\n        reportProgress: true,\n        observe: 'events',\n        ...options,\n      })\n      .subscribe(\n        (event) => {\n          // Upload Progress\n          if (event.type === HttpEventType.UploadProgress) {\n            this.enableUploadBtn = false; // button should be disabled if process uploading\n            const currentDone = event.loaded / event.total;\n            this.uploadPercent = Math.round((event.loaded / event.total) * 100);\n          } else if (event.type === HttpEventType.Response) {\n            if (event.status === 200 || event.status === 201) {\n              // Success\n              this.progressBarShow = false;\n              this.enableUploadBtn = false;\n              this.uploadMsg = true;\n              this.afterUpload = true;\n              if (!isError) {\n                this.uploadMsgText = this.replaceTexts.afterUploadMsg_success;\n                this.uploadMsgClass = 'text-success lead';\n              }\n            } else {\n              // Failure\n              isError = true;\n              this.handleErrors();\n            }\n\n            this.ApiResponse.emit(event);\n          } else {\n            //console.log('Event Other: ', event);\n          }\n        },\n        (error) => {\n          // Failure\n          isError = true;\n          this.handleErrors();\n          this.ApiResponse.emit(error);\n        }\n      );\n  }\n\n  handleErrors() {\n    this.progressBarShow = false;\n    this.enableUploadBtn = false;\n    this.uploadMsg = true;\n    this.afterUpload = true;\n    this.uploadMsgText = this.replaceTexts.afterUploadMsg_error;\n    this.uploadMsgClass = 'text-danger lead';\n  }\n\n  removeFile(i: any, sf_na: any) {\n    if (sf_na === 'sf') {\n      this.allowedFiles.splice(i, 1);\n      this.Caption.splice(i, 1);\n    } else {\n      this.notAllowedFiles.splice(i, 1);\n    }\n\n    if (this.allowedFiles.length === 0) {\n      this.enableUploadBtn = false;\n    }\n  }\n\n  convertSize(fileSize: number): string {\n    return fileSize < 1024000\n      ? (fileSize / 1024).toFixed(2) + ' KB'\n      : (fileSize / 1024000).toFixed(2) + ' MB';\n  }\n\n  attachpinOnclick() {\n    const element = document.getElementById('sel' + this.id);\n    if (element !== null) {\n      element.click();\n    }\n  }\n\n  drop(event: any) {\n    event.stopPropagation();\n    event.preventDefault();\n    this.onChange(event);\n  }\n\n  allowDrop(event: any) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AngularFileUploaderComponent } from './angular-file-uploader.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n  ],\n  declarations: [AngularFileUploaderComponent],\n  exports: [AngularFileUploaderComponent]\n})\nexport class AngularFileUploaderModule { }\n","/*\n * Public API Surface of angular-file-uploader\n */\n\nexport * from './lib/angular-file-uploader.service';\nexport * from './lib/angular-file-uploader.component';\nexport * from './lib/angular-file-uploader.module';\nexport * from './lib/angular-file-uploader.types';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}