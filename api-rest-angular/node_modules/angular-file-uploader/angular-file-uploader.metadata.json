{"__symbolic":"module","version":4,"metadata":{"AngularFileUploaderService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":3,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}]},"statics":{"Éµprov":{}}},"AngularFileUploaderComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":23,"character":1},"arguments":[{"selector":"angular-file-uploader","template":"<div class=\"container\" *ngIf=\"(theme !== 'attachPin')\" id=\"default\">\n\n  <!-- Drag n Drop theme Starts -->\n  <div *ngIf=\"theme == 'dragNDrop'\" id=\"dragNDrop\"\n    [ngClass]=\"(hideSelectBtn && hideResetBtn) ? null : 'dragNDropBtmPad'\" class=\"dragNDrop\">\n    <div style=\"position:relative;\">\n      <div id=\"div1\" class=\"div1 afu-dragndrop-box\" (drop)=\"drop($event)\" (dragover)=\"allowDrop($event)\">\n        <p class=\"afu-dragndrop-text\">{{replaceTexts?.dragNDropBox}}</p>\n      </div>\n      <!-- <span class='label label-info' id=\"upload-file-info{{id}}\">{{allowedFiles[0]?.name}}</span> -->\n    </div>\n  </div>\n  <!-- Drag n Drop theme Ends -->\n\n  <label for=\"sel{{id}}\" class=\"btn btn-primary btn-sm afu-select-btn\"\n    *ngIf=\"!hideSelectBtn\">{{replaceTexts?.selectFileBtn}}</label>\n  <input type=\"file\" id=\"sel{{id}}\" style=\"display: none\" *ngIf=\"!hideSelectBtn\" (change)=\"onChange($event)\"\n    title=\"Select file\" name=\"files[]\" [accept]=formatsAllowed [attr.multiple]=\"multiple ? '' : null\" />\n  <button class=\"btn btn-info btn-sm resetBtn afu-reset-btn\" (click)=\"resetFileUpload()\"\n    *ngIf=\"!hideResetBtn\">{{replaceTexts?.resetBtn}}</button>\n  <br *ngIf=\"!hideSelectBtn\">\n  <p class=\"constraints-info afu-constraints-info\">({{formatsAllowed}}) {{replaceTexts?.sizeLimit}}: {{(convertSize(maxSize))}}\n  </p>\n  <!--Allowed file list-->\n  <div class=\"row afu-valid-file\" *ngFor=\"let sf of allowedFiles;let i=index\">\n    <p class=\"col-xs-3 textOverflow\"><span class=\"text-primary\">{{sf.name}}</span></p>\n    <p class=\"col-xs-3 padMarg sizeC\"><strong>({{convertSize(sf.size)}})</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\n    <!--  <input class=\"col-xs-3 progress caption\"  type=\"text\"  placeholder=\"Caption..\"  [(ngModel)]=\"Caption[i]\"  *ngIf=\"!uploadStarted\"/> -->\n    <div class=\"progress col-xs-3 padMarg afu-progress-bar\" *ngIf=\"isAllowedFileSingle && progressBarShow && !hideProgressBar\">\n      <span class=\"progress-bar progress-bar-success\" role=\"progressbar\"\n        [ngStyle]=\"{'width':uploadPercent+'%'}\">{{uploadPercent}}%</span>\n    </div>\n    <a class=\"col-xs-1\" role=\"button\" (click)=\"removeFile(i,'sf')\" *ngIf=\"!uploadStarted\"><i class=\"fa fa-times\"></i></a>\n  </div>\n  <!--Not Allowed file list-->\n  <div class=\"row text-danger afu-invalid-file\" *ngFor=\"let na of notAllowedFiles;let j=index\">\n    <p class=\"col-xs-3 textOverflow\"><span>{{na['fileName']}}</span></p>\n    <p class=\"col-xs-3 padMarg sizeC\"><strong>({{na['fileSize']}})</strong></p>\n    <p class=\"col-xs-3 \">{{na['errorMsg']}}</p>\n    <a class=\"col-xs-1 delFileIcon\" role=\"button\" (click)=\"removeFile(j,'na')\" *ngIf=\"!uploadStarted\">&nbsp;<i\n        class=\"fa fa-times\"></i></a>\n  </div>\n\n  <p *ngIf=\"uploadMsg\" class=\"{{uploadMsgClass}} + afu-upload-status\">{{uploadMsgText}}<p>\n      <div *ngIf=\"!isAllowedFileSingle && progressBarShow && !hideProgressBar\">\n        <div class=\"progress col-xs-4 padMarg afu-progress-bar\">\n          <span class=\"progress-bar progress-bar-success\" role=\"progressbar\"\n            [ngStyle]=\"{'width':uploadPercent+'%'}\">{{uploadPercent}}%</span>\n        </div>\n        <br>\n        <br>\n      </div>\n      <button class=\"btn btn-success afu-upload-btn\" type=\"button\" (click)=\"uploadFiles()\"\n        [disabled]=!enableUploadBtn>{{replaceTexts?.uploadBtn}}</button>\n      <br>\n</div>\n\n<!--/////////////////////////// ATTACH PIN THEME  //////////////////////////////////////////////////////////-->\n<div *ngIf=\"theme == 'attachPin'\" id=\"attachPin\">\n  <div style=\"position:relative;padding-left:6px\">\n    <a class='btn up_btn afu-attach-pin' (click)=\"attachpinOnclick()\">\n      {{replaceTexts?.attachPinBtn}}\n      <i class=\"fa fa-paperclip\" aria-hidden=\"true\"></i>\n      <!-- <p style=\"margin-top:10px\">({{formatsAllowed}}) Size limit- {{(convertSize(maxSize))}}</p> -->\n      <input type=\"file\" id=\"sel{{id}}\" (change)=\"onChange($event)\" style=\"display: none\" title=\"Select file\"\n        name=\"files[]\" [accept]=formatsAllowed [attr.multiple]=\"multiple ? '' : null\" />\n      <br>\n    </a>\n    &nbsp;\n    <span class='label label-info' id=\"upload-file-info{{id}}\">{{allowedFiles[0]?.name}}</span>\n  </div>\n</div>\n\n","styles":[".constraints-info{margin-top:10px;font-style:italic}.padMarg{padding:0;margin-bottom:0}.caption{margin-right:5px}.textOverflow{white-space:nowrap;padding-right:0;overflow:hidden;text-overflow:ellipsis}.up_btn{color:#000;background-color:transparent;border:2px solid #5c5b5b;border-radius:22px}.delFileIcon{text-decoration:none;color:#ce0909}.dragNDrop .div1{display:border-box;border:2px dashed #5c5b5b;height:6rem;width:20rem}.dragNDrop .div1>p{text-align:center;font-weight:700;color:#5c5b5b;margin-top:1.4em}.dragNDropBtmPad{padding-bottom:2rem}@media screen and (max-width:620px){.caption{padding:0}}@media screen and (max-width:510px){.sizeC{width:25%}}@media screen and (max-width:260px){.caption,.sizeC{font-size:10px}}.resetBtn{margin-left:3px}"]}]}],"members":{"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"resetUpload":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":3}}]}],"ApiResponse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":37,"character":3}}]}],"everythingDone":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":40,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":79,"character":28}]}],"ngOnChanges":[{"__symbolic":"method"}],"resetFileUpload":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}],"uploadFiles":[{"__symbolic":"method"}],"handleErrors":[{"__symbolic":"method"}],"removeFile":[{"__symbolic":"method"}],"convertSize":[{"__symbolic":"method"}],"attachpinOnclick":[{"__symbolic":"method"}],"drop":[{"__symbolic":"method"}],"allowDrop":[{"__symbolic":"method"}]}},"AngularFileUploaderModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":5,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":7,"character":4},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClientModule","line":8,"character":4}],"declarations":[{"__symbolic":"reference","name":"AngularFileUploaderComponent"}],"exports":[{"__symbolic":"reference","name":"AngularFileUploaderComponent"}]}]}],"members":{}},"ReplaceTexts":{"__symbolic":"interface"},"UploadApi":{"__symbolic":"interface"},"AngularFileUploaderConfig":{"__symbolic":"interface"},"UploadInfo":{"__symbolic":"interface"}},"origins":{"AngularFileUploaderService":"./lib/angular-file-uploader.service","AngularFileUploaderComponent":"./lib/angular-file-uploader.component","AngularFileUploaderModule":"./lib/angular-file-uploader.module","ReplaceTexts":"./lib/angular-file-uploader.types","UploadApi":"./lib/angular-file-uploader.types","AngularFileUploaderConfig":"./lib/angular-file-uploader.types","UploadInfo":"./lib/angular-file-uploader.types"},"importAs":"angular-file-uploader"}