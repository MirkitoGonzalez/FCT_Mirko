{"version":3,"file":"editor.directive.js","sourceRoot":"","sources":["../../.tmp/editor/editor.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\r\nimport { Directive, ElementRef, EventEmitter, Input, NgZone, Optional, Output, Renderer, forwardRef } from '@angular/core';\r\n\r\nimport FroalaEditor from 'froala-editor';\r\n\r\n@Directive({\r\n  selector: '[froalaEditor]',\r\n  exportAs: 'froalaEditor',\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR, useExisting:\r\n      forwardRef(() => FroalaEditorDirective),\r\n    multi: true\r\n  }]\r\n})\r\nexport class FroalaEditorDirective implements ControlValueAccessor {\r\n\r\n  // editor options\r\n  private _opts: any = {\r\n    immediateAngularModelUpdate: false,\r\n    angularIgnoreAttrs: null\r\n  };\r\n\r\n  private _element: any;\r\n\r\n  private SPECIAL_TAGS: string[] = ['img', 'button', 'input', 'a'];\r\n  private INNER_HTML_ATTR: string = 'innerHTML';\r\n  private _hasSpecialTag: boolean = false;\r\n\r\n  // editor element\r\n  private _editor: any;\r\n\r\n  // initial editor content\r\n  private _model: string;\r\n\r\n  private _editorInitialized: boolean = false;\r\n\r\n  private _oldModel: string = null;\r\n\r\n  constructor(el: ElementRef, private zone: NgZone) {\r\n\r\n    let element: any = el.nativeElement;\r\n\r\n    // check if the element is a special tag\r\n    if (this.SPECIAL_TAGS.indexOf(element.tagName.toLowerCase()) != -1) {\r\n      this._hasSpecialTag = true;\r\n    }\r\n    this._element = element;\r\n\r\n    this.zone = zone;\r\n  }\r\n\r\n  // Begin ControlValueAccesor methods.\r\n  onChange = (_) => { };\r\n  onTouched = () => { };\r\n\r\n  // Form model content changed.\r\n  writeValue(content: any): void {\r\n    this.updateEditor(content);\r\n  }\r\n\r\n  registerOnChange(fn: (_: any) => void): void { this.onChange = fn; }\r\n  registerOnTouched(fn: () => void): void { this.onTouched = fn; }\r\n  // End ControlValueAccesor methods.\r\n\r\n  // froalaEditor directive as input: store the editor options\r\n  @Input() set froalaEditor(opts: any) {\r\n    this._opts = opts || this._opts;\r\n  }\r\n\r\n  // froalaModel directive as input: store initial editor content\r\n  @Input() set froalaModel(content: any) {\r\n    this.updateEditor(content);\r\n  }\r\n\r\n  // Update editor with model contents.\r\n  private updateEditor(content: any) {\r\n    if (JSON.stringify(this._oldModel) == JSON.stringify(content)) {\r\n      return;\r\n    }\r\n\r\n    if (!this._hasSpecialTag) {\r\n      this._oldModel = content;\r\n    }\r\n    else {\r\n      this._model = content;\r\n    }\r\n\r\n    if (this._editorInitialized) {\r\n      if (!this._hasSpecialTag) {\r\n        this._editor.html.set(content);\r\n      }\r\n      else {\r\n        this.setContent();\r\n      }\r\n    }\r\n    else {\r\n      if (!this._hasSpecialTag) {\r\n        this._element.innerHTML = content || '';\r\n      }\r\n      else {\r\n        this.setContent();\r\n      }\r\n    }\r\n  }\r\n\r\n  // froalaModel directive as output: update model if editor contentChanged\r\n  @Output() froalaModelChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  // froalaInit directive as output: send manual editor initialization\r\n  @Output() froalaInit: EventEmitter<Object> = new EventEmitter<Object>();\r\n\r\n  // update model if editor contentChanged\r\n  private updateModel() {\r\n    this.zone.run(() => {\r\n\r\n      let modelContent: any = null;\r\n\r\n      if (this._hasSpecialTag) {\r\n\r\n        let attributeNodes = this._element.attributes;\r\n        let attrs = {};\r\n\r\n        for (let i = 0; i < attributeNodes.length; i++) {\r\n\r\n          let attrName = attributeNodes[i].name;\r\n          if (this._opts.angularIgnoreAttrs && this._opts.angularIgnoreAttrs.indexOf(attrName) != -1) {\r\n            continue;\r\n          }\r\n\r\n          attrs[attrName] = attributeNodes[i].value;\r\n        }\r\n\r\n        if (this._element.innerHTML) {\r\n          attrs[this.INNER_HTML_ATTR] = this._element.innerHTML;\r\n        }\r\n\r\n        modelContent = attrs;\r\n      } else {\r\n\r\n        let returnedHtml: any = this._editor.html.get();\r\n        if (typeof returnedHtml === 'string') {\r\n          modelContent = returnedHtml;\r\n        }\r\n      }\r\n      if (this._oldModel !== modelContent) {\r\n        this._oldModel = modelContent;\r\n\r\n        // Update froalaModel.\r\n        this.froalaModelChange.emit(modelContent);\r\n\r\n        // Update form model.\r\n        this.onChange(modelContent);\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  private registerEvent(eventName, callback) {\r\n\r\n    if (!eventName || !callback) {\r\n      return;\r\n    }\r\n\r\n    if (!this._opts.events) {\r\n      this._opts.events = {};\r\n    }\r\n\r\n    this._opts.events[eventName] = callback;\r\n  }\r\n\r\n  private initListeners() {\r\n    let self = this;\r\n    // Check if we have events on the editor.\r\n    if (this._editor.events) {\r\n      // bind contentChange and keyup event to froalaModel\r\n      this._editor.events.on('contentChanged', function () {\r\n        setTimeout(function () {\r\n          self.updateModel();\r\n        }, 0);\r\n      });\r\n      this._editor.events.on('mousedown', function () {\r\n        setTimeout(function () {\r\n          self.onTouched();\r\n        }, 0);\r\n      });\r\n\r\n      if (this._opts.immediateAngularModelUpdate) {\r\n        this._editor.events.on('keyup', function () {\r\n          setTimeout(function () {\r\n            self.updateModel();\r\n          }, 0);\r\n        });\r\n      }\r\n    }\r\n\r\n    this._editorInitialized = true;\r\n  }\r\n\r\n  private createEditor() {\r\n    if (this._editorInitialized) {\r\n      return;\r\n    }\r\n\r\n    this.setContent(true);\r\n\r\n    // init editor\r\n    this.zone.runOutsideAngular(() => {\r\n      // Add listeners on initialized event.\r\n      if (!this._opts.events) this._opts.events = {}\r\n\r\n      // Register initialized event.\r\n      this.registerEvent('initialized', this._opts.events && this._opts.events.initialized);\r\n      const existingInitCallback = this._opts.events.initialized;\r\n      // Default initialized event.\r\n      if (!this._opts.events.initialized || !this._opts.events.initialized.overridden) {\r\n        this._opts.events.initialized = () => {\r\n          this.initListeners();\r\n          existingInitCallback && existingInitCallback.call(this._editor, this);\r\n        };\r\n        this._opts.events.initialized.overridden = true;\r\n      }\r\n\r\n      // Initialize the Froala Editor.\r\n      this._editor = new FroalaEditor(\r\n        this._element,\r\n        this._opts\r\n      );\r\n    });\r\n  }\r\n\r\n  private setHtml() {\r\n    this._editor.html.set(this._model || \"\");\r\n\r\n    // This will reset the undo stack everytime the model changes externally. Can we fix this?\r\n    this._editor.undo.reset();\r\n    this._editor.undo.saveStep();\r\n  }\r\n\r\n  private setContent(firstTime = false) {\r\n    let self = this;\r\n\r\n    // Set initial content\r\n    if (this._model || this._model == '') {\r\n      this._oldModel = this._model;\r\n      if (this._hasSpecialTag) {\r\n\r\n        let tags: Object = this._model;\r\n\r\n        // add tags on element\r\n        if (tags) {\r\n\r\n          for (let attr in tags) {\r\n            if (tags.hasOwnProperty(attr) && attr != this.INNER_HTML_ATTR) {\r\n              this._element.setAttribute(attr, tags[attr]);\r\n            }\r\n          }\r\n\r\n          if (tags.hasOwnProperty(this.INNER_HTML_ATTR)) {\r\n            this._element.innerHTML = tags[this.INNER_HTML_ATTR];\r\n          }\r\n        }\r\n      } else {\r\n        if (firstTime) {\r\n          this.registerEvent('initialized', function () {\r\n            self.setHtml();\r\n          });\r\n        } else {\r\n          self.setHtml();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private destroyEditor() {\r\n    if (this._editorInitialized) {\r\n      this._editor.destroy();\r\n      this._editorInitialized = false;\r\n    }\r\n  }\r\n\r\n  private getEditor() {\r\n    if (this._element) {\r\n      return this._editor;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  // send manual editor initialization\r\n  private generateManualController() {\r\n    let controls = {\r\n      initialize: this.createEditor.bind(this),\r\n      destroy: this.destroyEditor.bind(this),\r\n      getEditor: this.getEditor.bind(this),\r\n    };\r\n    this.froalaInit.emit(controls);\r\n  }\r\n\r\n  // TODO not sure if ngOnInit is executed after @inputs\r\n  ngAfterViewInit() {\r\n    // check if output froalaInit is present. Maybe observers is private and should not be used?? TODO how to better test that an output directive is present.\r\n    if (!this.froalaInit.observers.length) {\r\n      this.createEditor();\r\n    } else {\r\n      this.generateManualController();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyEditor();\r\n  }\r\n}\r\n"]}